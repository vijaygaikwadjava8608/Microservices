spring:
  application:
    name: API-GATEWAY
  cloud:
    gateway:
      routes:
        - id: ORDER-SERVICE
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order/**
          filters:
            - name: CircuitBreaker
              args:
                name: ORDER-SERVICE
                fallbackuri: forward:/orderServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        - id: paymentService
          uri: lb://PAYMENT-SERVICE
          predicates:
            - Path=/payment/**
          filters:
            - name: CircuitBreaker
              args:
                name: PAYMENT-SERVICE
                fallbackuri: forward:/paymentServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
                
        - id: productService
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/product/**
          filters:
            - name: CircuitBreaker
              args:
                name: PRODUCT-SERVICE
                fallbackuri: forward:/productServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
  config:
    import: configserver:http://localhost:9296
    
server:
  port: 9090

management:
  tracing:
    sampling:
      probability: 1.0
      
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.cloud.loadbalancer: DEBUG

okta:
  oauth2:
    issuer: https://dev-92235018.okta.com/oauth2/default
    audience: api://default
    client-id: 0oakoivimjP1cfsJ65d7
    client-secret: _8CtwLEx2B75lFeSIDQTiWB2FYSwCS6ccGCEN5Oe0txLOeGVJVxllZFY94hYhIK6
    scopes: openid, profile, email, offline_access
    
  
